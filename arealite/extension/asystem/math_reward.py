import traceback
from typing import List, Union
from arealite.extension.asystem.functioncall.math.verify import math_verify

# math-verify==0.5.2


def reward_fn(
    prompt: str,
    completion: str,
    prompt_ids: List[int],
    completion_ids: List[int],
    **kwargs,
):
    # prompt: prompt string (the task this data needs to complete)
    # completion: trajectory string generated by the model based on the task
    # prompt_ids: token ids of the prompt
    # completion_ids: token ids of the trajectory generated by the model
    # kwargs: all other attributes of this data in the dataset,
    #         for example, solutions, input_outputs, etc.

    solutions = kwargs.get("solutions")[0]
    query_id = kwargs.get("query_id")[0]

    print(f"solutions: {solutions}, completion: {completion}, query_id: {query_id}", flush=True)
    labels = math_verify([solutions], [completion], [query_id])
    print(f"ret:{labels}")
    return labels[0]


if __name__ == "__main__":
    answer = "<answer>\n28\n</answer>"
    solutions = [
        "<answer>\n28\n</answer>",
    ]

    print(
        reward_fn(
            None,
            answer,
            None,
            None,
            solutions=solutions,
        )
    )
