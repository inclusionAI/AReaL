[build-system]
requires = [ "setuptools<80,>=77.0.3", "build>=1.2.1"]
build-backend = "setuptools.build_meta"

[project]
name = "areal"
description = "AReaL: A Large-Scale Asynchronous Reinforcement Learning System for Language Reasoning"
readme = "README.md"
license = {text = "Apache-2.0"}
requires-python = ">=3.10"
dynamic = ["version"]
authors = [
    {name = "AReaL Team"},
]
maintainers = [
    {name = "AReaL Team"},
]
keywords = [
    "distributed-systems",
    "reinforcement-learning",
    "large-language-models",
    "llm-training",
]
classifiers = [
    #   3 - Alpha
    #   4 - Beta
    #   5 - Production/Stable
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: GPU :: NVIDIA CUDA :: 12 :: 12.2",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Distributed Computing",
]

dependencies = [
    # Core ML/AI libraries
    "torch>2.0.0",
    "huggingface_hub",
    "datasets",
    "accelerate",
    "transformers==4.56.1",
    "megatron-core==0.13.1",
    "mbridge==0.13.0",
    "peft",
    "qwen_agent",

    # Scientific computing
    "scipy",
    "pandas",
    "matplotlib",
    "seaborn",
    "h5py",

    # Utilities and data processing
    "setproctitle",
    "nltk",
    "sentencepiece",
    "einops",
    "tqdm",
    "rich",
    "orjson>=3.10.16",
    "pydantic",
    "PyYAML",
    "hydra-core==1.4.0.dev1",
    "packaging",
    "lark",
    "tabulate",
    "gymnasium>=1.1.1",
    "torchdata",
    "autoflake==2.3.1",
    "tensordict",
    "pybase64",
    "msgspec",
    "openai==1.99.6",
    "dotenv",
    "json5",

    # Monitoring and logging
    "wandb",
    "tensorboardx",
    "colorama",
    "colorlog",
    "psutil",
    "pynvml",
    "swanlab[dashboard]",

    # Performance and compression
    "ninja",
    "numba",
    "blosc",
    "pybind11>=2.10.0",

    # Networking and async
    "networkx==3.3",
    "aiofiles",
    "aiohttp>=3.11.10",
    "httpx>=0.28.1",
    "pyzmq",
    "paramiko",
    "etcd3",

    # Distributed computing
    "ray[default]",
    "redis",
    "deepspeed>=0.17.2",

    # Web frameworks
    "fastapi>=0.115.12",
    "uvicorn>=0.34.2",
    "uvloop>=0.21.0",
    "flask",

    # Build and packaging tools
    "build>=1.2.1",
    "wheel>=0.43.0",
    "setuptools<80,>=77.0.3",
    "cookiecutter>2.1.1",

    # System utilities
    "distro-info>=1.0",
    "python-debian>=0.1.49",
    "func_timeout",
    "regex",
    "python_dateutil",
    "word2number",
    "Pebble",
    "timeout-decorator",
    "prettytable",
    "sh"
]

[project.optional-dependencies]
dev = [
    "pytest",
    "ipython",
    "ruff==0.14.1",
    "clang-format==19.1.7",
    "sh~=2.2",
    "mdformat==0.7.17",
    "mdformat-gfm",
    "mdformat-tables",
    "mdformat-frontmatter",
]

docs = [
    "sphinx",
    "sphinx-nefertiti",
    "jupyter-book",
]

all = [
    "areal[dev]",
    "areal[docs]",
]

[project.urls]
"Homepage" = "https://github.com/inclusionAI/AReaL"
"Repository" = "https://github.com/inclusionAI/AReaL"
"Documentation" = "https://inclusionai.github.io/AReaL/intro.html"
"Bug Tracker" = "https://github.com/inclusionAI/AReaL/issues"

[tool.setuptools.dynamic]
version = {attr = "areal.__version__"}

[tool.setuptools.packages.find]
where = ["."]
include = ["areal*"]
exclude = ["tests*", "realhf*", "docs*", "examples*", "evaluation*", "benchmark*"]

[tool.pytest.ini_options]
pythonpath = ["."]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::FutureWarning",
    "ignore::UserWarning:torch.*",
    "ignore::UserWarning:transformers.*",
]

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.lint.isort]
from-first = false
known-first-party = ["areal"]
force-sort-within-sections = false
split-on-trailing-comma = true
combine-as-imports = false
force-wrap-aliases = false
lines-after-imports = 1

# The following tools are remained as legacy.
# We will use `ruff` instead in future development
[tool.isort]
profile = "black"

[tool.black]
line-length = 88

[tool.autoflake]
in-place = true
recursive = true
remove-all-unused-imports = true
remove-unused-variables = true